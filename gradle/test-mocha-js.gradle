task installDependenciesMochaNode(type: NpmTask, dependsOn: [npmInstall]) {
    args = ['install',
            "mocha@$mocha_version",
            "source-map-support@$source_map_support_version",
	    "kotlin@$kotlin_version",
	    "kotlinx-coroutines-core@$coroutine_version-SNAPSHOT",
	    "kotlin-test@$kotlin_version",
            '--no-save']
}

task copyAtomicFUIntoModules(type: Copy, dependsOn: [configurations.jsDefault]){
	outputs.upToDateWhen {false}
	from {
		configurations.jsDefault.filter{ it.path.contains("atomicfu")}.collect { zipTree(it) }
	}
	into "$node.nodeModulesDir"
}

task testMochaNode(type: NodeTask, dependsOn: [compileTestKotlinJs, installDependenciesMochaNode, copyAtomicFUIntoModules]) {
    script = file("$node.nodeModulesDir/mocha/bin/mocha")
    args = ["$compileTestKotlinJs.outputFile", '--require', 'source-map-support/register', "--timeout", "10000", "--exit"]
}

task copyCompiledFilesIntoNodeModules(type: Copy, dependsOn: [compileKotlinJs, compileTestKotlinJs]) {

	from compileKotlinJs.destinationDir
	from compileTestKotlinJs.destinationDir

	into "$node.nodeModulesDir"
}
//make sure the tests are executed  after atomicfu transformed all files
jsTest.mustRunAfter{
    transformJsMainAtomicfu
    transformJsTestAtomicfu
}

jsTest.dependsOn copyCompiledFilesIntoNodeModules
jsTest.dependsOn testMochaNode
