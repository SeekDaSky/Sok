apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

apply from: project.rootProject.file('gradle/maven-central.gradle')

task stubJavadoc(type: Jar) {
    classifier = 'javadoc'
}

task emptyJar(type: Jar) {
}

publishing {
    publications.all {

        it.version = "$sok_version"
        it.groupId =  "seekdasky.sok"

        pom.withXml(configureMavenCentralMetadata)
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    override = true // for multi-platform Kotlin/Native publishing
    //workaround for multiplatform plugin
    publications = project.publishing.publications.collect {
        it.name
    }
    pkg {
        licenses = ['MIT']
        name = 'sok'
        repo = 'sok'
        vcsUrl = 'https://github.com/SeekDaSky/Sok.git'
        version {
            name = sok_version
            vcsTag = sok_version
        }
    }
}

// Required for K/N publishing
bintrayUpload.dependsOn publishToMavenLocal

// Required to disable publish of metadata for all but native
kotlin.targets.all { target ->
    def publication = publishing.publications.findByName(target.name)

    if (publication != null) {
        publication.artifact stubJavadoc
        //unable metadata on all platforms for now
        //if (target.platformType.name != 'native') {
            publication.moduleDescriptorGenerator = null
            tasks.matching { it.name == "generateMetadataFileFor${name.capitalize()}Publication" }.all {
                onlyIf { false }
            }
        //} else {
            //publication.artifact emptyJar
        //}
    }
}